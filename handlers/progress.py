from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message
from services.progress_service import progress_service
from datetime import datetime
import pytz
from config import TIMEZONE


router = Router()


@router.message(Command("progress"))
async def cmd_progress(message: Message):
    """Handle /progress command"""
    telegram_id = message.from_user.id
    
    stats = await progress_service.get_progress_stats(telegram_id)
    
    if not stats:
        await message.answer(
            "‚ùå –í—ã –µ—â–µ –Ω–µ –Ω–∞—á–∞–ª–∏ –æ–±—É—á–µ–Ω–∏–µ.\n"
            "–û—Ç–ø—Ä–∞–≤—å—Ç–µ /start —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!",
            parse_mode="HTML"
        )
        return
    
    # Format next review time
    if stats['next_review_time']:
        tz = pytz.timezone(TIMEZONE)
        next_time = stats['next_review_time'].astimezone(tz)
        next_time_str = next_time.strftime("%d.%m.%Y %H:%M")
    else:
        next_time_str = "–≤—Å–µ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω—ã"
    
    # Build message
    text = (
        f"üìä <b>–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å:</b>\n\n"
        f"üìö –í—Å–µ–≥–æ —Å–ª–æ–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏–π: {stats['total_cards']}\n"
        f"‚úÖ –ò–∑—É—á–µ–Ω–æ: {stats['learned_cards']}\n"
        f"‚è∞ –û–∂–∏–¥–∞—é—Ç –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è: {stats['due_cards']}\n"
        f"üìÖ –°–ª–µ–¥—É—é—â–µ–µ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ: {next_time_str}\n\n"
        f"<b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤:</b>\n"
        f"‚úÖ –ó–Ω–∞–ª: {stats['knew_count']} —Ä–∞–∑\n"
        f"ü§î –°–æ–º–Ω–µ–≤–∞–ª—Å—è: {stats['doubt_count']} —Ä–∞–∑\n"
        f"‚ùå –ù–µ –∑–Ω–∞–ª: {stats['forgot_count']} —Ä–∞–∑\n\n"
        f"üî• –°–µ—Ä–∏—è –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥: {stats['current_streak']}\n"
        f"üìù –í—Å–µ–≥–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π: {stats['total_reviews']}"
    )
    
    await message.answer(text, parse_mode="HTML")

